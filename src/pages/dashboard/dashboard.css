.dashboard {
  position: relative;
  width: 100vw;
  height: 100vh;
  overflow: hidden; /* Asegura que las macetas no se salgan de la vista durante la animación */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-end; /* Para anclar el contenido de abajo */
}

.pots-container {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: flex-end;
  pointer-events: none;
  margin-bottom: 8%;
}

.pot-container {
  position: absolute;
  transition: all 0.5s ease-in-out;
  pointer-events: auto;
  display: flex;
  height: 40%;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
}

/* Posiciones dinámicas */
.pot-position-left {
  bottom: 10%;
  left: 20%;
  transform: scale(0.7);
  z-index: 1;
  cursor: pointer;
}

.pot-position-center {
  bottom: 10%;
  /* left: 50%; ⛔ eliminar */
  /* transform: translateX(-50%) scale(1); ⛔ eliminar */
  transform: scale(1); /* ✅ solo escalado */
  z-index: 2;
  cursor: default;
}
.pot-position-right {
  bottom: 10%;
  right: 20%;
  transform: scale(0.7);
  z-index: 1;
  cursor: pointer;
}
/* Nota: la clase .pot-central que se añade dinámicamente por React sobreescribirá la posición
   si una maceta de fondo se mueve al centro. Esto está implícito en la lógica de `isCentral`
   y cómo CSS aplica las reglas. El `pot-container:nth-child(2)` es la posición donde
   el `pot-central` o el `big-pot` se renderiza. */

.btn-container {
  position: absolute;
  bottom: 20px; /* Ajusta la posición de los botones */
  display: flex;
  gap: 20px;
  z-index: 10; /* Asegura que los botones estén por encima de las macetas */
}